Chhattisgarh Swami Vivekanand Technical University,
 Bhilai Name of program: Bachelor of Engineering                                 Branch: Computer Science & Engineering Semester: IV Subject: Computational Mathematics Code: 322451(14) Total Theory Periods:                     40 Total Tutorial Periods: 10 Class Tests: Two (Minimum) Assignments: Two (Minimum) ESE Duration: Three Hours Maximum Marks: 80 Minimum Marks: 28
Course Objectives: 1. To provide knowledge of various methods for numerical solutions of algebraic and transcendental equations, simultaneous equation and ordinary differential equations. 2. To provide a thorough understanding of interpolation and numerical differentiation and integration.

UNIT- I NUMERICAL SOLUTIONS OF ALGEBRAIC AND TRANSCENDENTAL EQUATIONS: Bisection Method, Regula-Falsi Method, Newton-Raphson Method, Secant Method, Birge-Vieta Method, Bairstow’s Method.

UNIT-II NUMERICAL SOLUTIONS OF SIMULTANEOUS LINEAR EQUATIONS: Direct Methods - Gauss Elimination, Gauss-Jordan &Crout’sTriangularisation Method. Iterative Methods - Jacobi’s, Gauss- Siedal& Successive over Relaxation Method.

UNIT- III INTERPOLATION WITH EQUAL AND UNEQUAL INTERVALS: Finite differences, Newton’s Forward & Backward Difference Formulae, Central Difference Formula, Stirling’s Formula, Bessel’s Formula, Lagrange’s Formula and Newton’s Divided Difference Formula,

UNIT-IV NUMERICAL DIFFERENTIATION AND INTEGRATION: Derivatives using Forward, Backward and Central Difference Formulae. Newton-Cote’s Quadrature Formula, Trapezoidal rule, Simpson’s rules, Weddle’s rule.

UNIT-V NUMERICAL SOLUTION OF ORDINARY DIFFERENTIAL EQUATIONS: Picard’s Method, Taylor’s Series Method, Euler’s Method, Euler’s Modified Method, Runge-Kutta Methods, Predictor-corrector Methods- Milne’s Method, Adams-Bashforth Method.

Text Books: 1. Numerical Methods in Engineering and Science by Dr. B.S. Grewal, Khanna Publishers. 2. Numerical Methods for Scientific and Engineering Computation by M .K. Jain, S. R. K.
Reference Books: 1. Numerical Methods for Scientists and Engineers by K. Shankar Rao, Prentice Hall of India. 2. Numerical Methods with C++ Programming, by Somasundaram&Chandrasekaran, Prentice Hall of India. 3. Numerical Methods, by S. S. Shastry, Prentice Hall Inc. India 1998. 4. Iyengar& R. K. Jain, Wiley Eastern Limited.
Course Outcome: After completion of this course students will be able to find Numerical solution of various equations, which may be arising due to mathematical modelling based on engineering problems.
Chhattisgarh Swami Vivekanand Technical University, Bhilai Name of program: Bachelor of Engineering                                 Branch: Computer Science & Engineering Semester: IV Subject: Discrete Structures Code: 322452(14) Total Theory Periods:                     40 Total Tutorial Periods: 10 Class Tests: Two (Minimum) Assignments: Two (Minimum) ESE Duration: Three Hours Maximum Marks: 80 Minimum Marks: 28
Course Objectives: 1. To introduce a number of discrete mathematical structures found to be serving as tools in the development of theoretical computer science. 2. Course focuses on how discrete structures actually helped computer engineers to solve problems occurred in the development of programming languages. 3. Course highlights the importance of discrete structures towards simulation of a problem in computer science engineering.
UNIT- I MATHEMATICAL LOGIC & BOOLEAN ALGEBRA: Basic concept of mathematical logic, Statements, Connectives, Conditional and biconditional statements, Logical equivalence, Logical implication & quantifiers, Basic concept of Boolean Algebra, Properties of Boolean Algebra, Boolean functions, Disjunctive & conjunctive normal forms of Boolean functions, Applications of Boolean Algebra in switching circuits & logic circuits.
UNIT-II SET THEORY, RELATIONS, FUNCTIONS: Basic concept of set theory, Relations, Properties of relation in a set, Equivalence relation, Composition of relations, Partial order & total order relations, Lattices &Hasse diagram, Introduction to function, Inverse, Identity, Injective, Surjective&Bijective functions, Composition of functions and some special functions.
UNIT- III ALGEBRAIC STRUCTURES: Groups, Subgroups, Cosets, Lagrange’s theorem, Isomorphism, Automorphism, Homomorphism, Codes & group codes, Rings, Integral domains and Fields.
UNIT-IV GRAPH THEORY:  Introduction to graph theory, Walks, Paths & Circuits, Types of graphs, Shortest path problems, Eulerian and Hamiltonian graphs, Basic concept of tree: spanning tree, minimum spanning tree, search tree, rooted binary tree, Cut sets, Network flow, Matrix representation of graphs.
UNIT-V COMBINATORICS: Permutation and combination, Pigeon-hole principle, Mathematical induction, Principle of Inclusion and Exclusion, Generating function, Recurrence relation.
Text Books: 1. Elements of discrete mathematics by C.L. Liu, Tata McGraw-Hill, publications. 2. Discrete Mathematical structures, by Bernard Kolman, Robert C. Busby and Sharon Cutler Ross, Pearson Education.
Reference Books: 1. A Text Book of Discrete Mathematics, Swapan Kumar Sarkar, S. Chand &Compeny Ltd. 2. Graph theory with applications to engineering and computer science, by NarsinghDeo, Prentice Hall of India. 3. Discrete mathematics for computer scientists and mathematicians, by J.L. Mott, A. Kandel and T.P. Baker, Prentice Hall of India. 4. Discrete Mathematical Structures with applications to computer science, by J.P. Tremblay and R. Manohar, Tata McGrawHill.
Course Outcomes: After completion of this course students will be 1. Able to apply mathematical logic and Boolean algebra in switching circuits & logic circuits. 2. Familiar with set theory, relation and functions. 3. Familiar with algebraic structures, graph theory and combinatorics. 4. Able to solve problems in various fields in computer science, specially networking.
Chhattisgarh Swami Vivekanand Technical University, Bhilai Name of program: Bachelor of Engineering                                 Branch: Computer Science & Engineering Semester: IV Subject: Data Structures Code: 322453(22) Total Theory Periods:                     40 Total Tutorial Periods: 10 Class Tests: Two (Minimum) Assignments: Two (Minimum) ESE Duration: Three Hours Maximum Marks: 80 Minimum Marks: 28
Course Objectives: 1. Understand the data organization 2. Define the term ‘data structure’; 3. Know the classifications of data structures, i.e., linear and non-linear  understand the basic operations on linear and non- linear data structures; 4. Explain the memory representation of all types of data structures 5. Explain how to implement the all kinds of data structures.
UNIT- I Introduction: Basic Terminology, Elementary Data Organization, Algorithm, Efficiency of an Algorithm, Time and Space Complexity, Asymptotic notations: Big-Oh, Time-Space trade-off. Abstract Data Types (ADT)  Arrays: Definition, Single and Multidimensional Arrays, Representation of Arrays: Row Major Order, and Column Major Order, Application of arrays, Sparse Matrices and their representations. Linked lists: Array Implementation and Dynamic Implementation of Singly Linked Lists, Doubly Linked List, Circularly Linked List, Operations on a Linked List. Insertion, Deletion, Traversal, Polynomial Representation and Addition, Generalized Linked List. UNIT-II Stacks: Abstract Data Type, Primitive Stack operations: Push & Pop, Array and Linked Implementation of Stack in C, Application of stack: Prefix and Postfix Expressions, Evaluation of postfix expression, Recursion, Tower of Hanoi Problem, Simulating Recursion, Principles of recursion, Tail recursion, Removal of recursion Queues, Operations on Queue: Create, Add, Delete, Full and Empty, Circular queues, Array and linked implementation of queues in C, Dequeue and Priority Queue. UNIT- III Trees: Basic terminology, Binary Trees, Binary Tree Representation: Array Representation and Dynamic Representation, Complete Binary Tree, Algebraic Expressions, Extended Binary Trees, Array and Linked Representation of Binary trees, Tree Traversal algorithms: Inorder, Preorder and Postorder, Threaded Binary trees, Traversing Threaded Binary trees, Huffman algorithm. UNIT-IV Graphs: Terminology, Sequential and linked Representations of Graphs: Adjacency Matrices, Adjacency List, Adjacency Multi list, Graph Traversal : Depth First Search and Breadth First Search, Connected Component, Spanning Trees, Minimum Cost Spanning Trees: Prims and Kruskal algorithm. Transistive Closure and Shortest Path algorithm: Warshal Algorithm and Dijikstra Algorithm, Introduction to Activity Networks UNIT-V Searching : Sequential search, Binary Search, Comparison and Analysis Internal Sorting: Insertion Sort, Selection, Bubble Sort, Quick Sort, Two Way Merge Sort, Heap Sort, Radix Sort, Practical consideration for Internal Sorting. (7)  Search Trees: Binary Search Trees(BST), Insertion and Deletion in BST, Complexity of Search Algorithm, AVL trees, Introduction to m-way Search Trees, B Trees & B+ Trees, Hashing: Hash Function, Collision Resolution Strategies ,Storage Management: Garbage Collection and Compaction.
Text books: 1. Aaron M. Tenenbaum, YedidyahLangsam and Moshe J. Augenstein “Data Structures Using C and C/C++” , PHI 2. Horowitz and Sahani, “Fundamentals of Data Structures”, Galgotia Publication
References books: 1. Jean Paul Trembley and Paul G. Sorenson, “An Introduction to Data Structures with applications”, McGraw Hill 2. R. Kruse etal, “Data Structures and Program Design in C”, Pearson Education 3. Lipschutz, “Data Structures” Schaum’s Outline Series, TMH 4. G A V Pai, “Data Structures and Algorithms”, TMH
Course Outcomes: 1. Have a comprehensive knowledge of the data structures and algorithms on which file structures and data bases are based. 2. Understand the importance of data and be able to identify the data requirements for an application. 3. Have in depth understanding and practical experience of algorithmic design and implementation. 4. Have practical experience of developing applications that utilize databases. 5. Understand the issues involved in algorithm complexity and performance
Chhattisgarh Swami Vivekanand Technical University, Bhilai Name of program: Bachelor of Engineering                                 Branch: Computer Science & Engineering Semester: IV Subject: Computer Systems Architecture Code: 322454(22) Total Theory Periods:                     40 Total Tutorial Periods: 10 Class Tests: Two (Minimum) Assignments: Two (Minimum) ESE Duration: Three Hours Maximum Marks: 80 Minimum Marks: 28
Course Objectives: The overall objective with the course is to understand basic working principles of computer hardware units and give knowledge and insights into the design of modern computers, in particular the processor design including parallel computational pipelines and memory hierarchies.
UNIT- I BASIC STRUCTURE OF COMPUTERS: Functional units, Basic operational concepts, Bus structures Addressing modes, subroutines: parameter passing, Instruction formats, expanding Opcodes method. BASIC PROCESSING UNIT: bus architecture, Execution of a Complete Instruction, sequencing of control signals, Hardwired control, Microprogrammed Control, microinstruction format, Bit slice concept.
UNIT-II ARITHMETIC: Number representations and their operations, Design of Fast Adders, Signed multiplication, Booth’s Algorithm, bit-pair recoding, Integer Division, Floating point numbers and operations, guard bits and rounding.
UNIT- III THE MEMORY SYSTEM: various technologies used in memory design, higher order memory design, multimodule memories and interleaving, Associative Memory, Cache memory, Virtual Memory.
UNIT-IV INPUT/OUTPUT ORGANIZATION: I/O-mapped I/O and memory-mapped I/O, interrupts and interrupt handling mechanisms, vectored interrupts, synchronous vs. asynchronous data transfer, Direct Memory Access COMPUTER PERIPHERALS: I/O devices such as magnetic disk, magnetic tape, CDROM systems.
UNIT-V RISC philosophy: pipelining, basic concepts in pipelining, delayed branch, branch prediction, data dependency, influence of pipelining on instruction set design, multiple execution units, performance considerations, Basic concepts in parallel processing:& classification of parallel architectures, Vector Processing, Array Processors.
Text Books: 1. Computer Organization, V.C.Hamacher,Z.G.Vranesic and S.G.Zaky, McGraw Hill,5th Edition,2002. 2. Computer Architecture & Organization, 3rdEdition, J.P. Hayes, McGraw-Hill. 3. Structured Computer Organization, A.S.Tanenbaum, 4th Edition, Pearson Education India
Reference Books: 1. Computer System Architecture &Organisation, Dr. Usha, Wiley India 2. Computer System and Architecture,M. Mano, Pearson Education India. 3. Computer Organization & Architecture, W. Stallings, Pearson Education India
Course Outcomes: 1. To be able to describe the basic hardware components of a computer system. 2. To be familiar with the binary and hexadecimal number systems including computer arithmetic. 3. To be familiar with the functional units of the processor such as the register file and arithmetic‐logical unit. 4. Be familiar with the basics of systems topics: parallel, pipelined, superscalar, and RISC/CISC architectures. 5. To be familiar with the representation of data, addressing modes, an instruction sets.
Chhattisgarh Swami Vivekanand Technical University, Bhilai Name of program: Bachelor of Engineering                                 Branch: Computer Science & Engineering Semester: IV Subject: Object Oriented Concepts & Programming using C++ Code: 322455(22) Total Theory Periods:                     40 Total Tutorial Periods: 10 Class Tests: Two (Minimum) Assignments: Two (Minimum) ESE Duration: Three Hours Maximum Marks: 80 Minimum Marks: 28 Course Objectives: 1. Understand object-oriented programming features in C++, 2. Apply these features to program design and implementation, 3. Understand object-oriented concepts and how they are supported by C++, 4. Understand implementation issues related to object-oriented techniques, 5. Build good quality software using object-oriented programming technique
UNIT- I Object-Oriented Programming Concepts: Introduction, comparison between procedural programming paradigm and object-oriented programming paradigm, basic concepts of object-oriented programming — concepts of an object and a class, interface and implementation of a class, operations on objects, relationship among objects, abstraction, encapsulation, data hiding, inheritance, overloading, polymorphism, messaging.
UNIT-II Standard Input/Output: Concept of streams, hierarchy of console stream classes, input/output using overloaded operators >> and << and member functions of i/o stream classes, formatting output, formatting using ios class functions and flags, formatting using manipulators. Classes and Objects: Specifying a class, creating class objects, accessing class members, access specifiers, static members, use of constkeyword, friends of a class, empty classes, nested classes, local classes, abstract classes, container classes, bit fields and classes.
UNIT- III Pointers and Dynamic Memory Management: Declaring and initializing pointers, accessing data through pointers, pointer arithmetic, memory allocation (static and dynamic), dynamic memory management using new and delete operators, pointer to an object, this pointer, pointer related problems - dangling/wild pointers, null pointer assignment, memory leak and allocation failures. Constructors and Destructors: Need for constructors and destructors, copy constructor, dynamic constructors, explicit constructors, destructors, constructors and destructors with static members, initializer lists.
UNIT-IV Operator Overloading and Type Conversion: Overloading operators, rules for overloading operators, overloading of various operators, type conversion - basic type to class type, class type to basic type, class type to another class type. Inheritance: Introduction, defining derived classes, forms of inheritance, ambiguity in multiple and multipath inheritance, virtual base class, object slicing, overriding member functions, object composition and delegation, order of execution of constructors and destructors.
UNIT-V Virtual functions & Polymorphism: Concept of binding - early binding and late binding, virtual functions, pure virtual functions, abstract clasess, virtual destructors. Exception Handling: Review of traditional error handling, basics of exception handling, exception handling mechanism, throwing mechanism, catching mechanism, rethrowing an exception, specifying exceptions. Templates and Generic Programming: Template concepts, Function templates, class templates, illustrative examples. Files: File streams, hierarchy of file stream classes, error handling during file operations, reading/writing of files, accessing records randomly, updating files. Text Books: 1. Lafore R., Object Oriented Programming in C++, Waite Group. 2. E. Balagurusamy, Object Oriented Programming with C++, Tata McGraw Hill. Reference Books: 1. R. S. Salaria, Mastering Object-Oriented Programming with C++, Salaria Publishing House. 2. BjarneStroustrup, The C++ Programming Language, Addison Wesley. 3. Herbert Schildt, The Complete Reference to C++ Language, McGraw Hill-Osborne. 4. Lippman F. B, C++ Primer, Addison Wesley. 5. R. S. Salaria, Test Your Skills in Object-Oriented Programming With C++, Salaria Publishing House. Course Outcomes: 1. Knowledge and Understanding- At the end of a course the student will understand the concepts of: a) Variables, data Types (including strings and arrays) and Expressions b) Flow of Control c) Functional and procedural abstraction and its importance in good program design d) Pointers and memory allocation (static and dynamic) e) Iteration and Recursion 2. Skills - At the end of the course, a student will be able to: a) Analyse a simple programming problem specification b) Design a high-level (programming language independent) solution to the problem using functional abstraction and general imperative programming language constructs. Write, compile, execute and debug a C++ program which maps the high-level design onto concrete C++ programming constructs
Chhattisgarh Swami Vivekanand Technical University, Bhilai Name of program: Bachelor of Engineering                                 Branch: Computer Science & Engineering Semester: IV Subject: Operating System Code: 322456(22) Total Theory Periods:                     40 Total Tutorial Periods: 10 Class Tests: Two (Minimum) Assignments: Two (Minimum) ESE Duration: Three Hours Maximum Marks: 80 Minimum Marks: 28
Course Objectives: To study and apply concepts relating to operating systems, such as concurrency and control of asynchronous processes, deadlocks, memory management, processor and disk scheduling, parallel processing, and file system organization.
UNIT- I INTRODUCTION: Operation System objective and function, The Evolution of operating Systems, Batch, interactive, time sharing and real time systems, Protection. Operating System Structure,System Components, operating system service, System structure. Distributed Computing,The Key Architecture Trend; Parallel Computation, Input-Output Trends.
UNIT-II CONCURRENT PROCESSES:Process concept: Introduction, Definitions of “Process”, Process States, Process StateTransitions, The process Control Block, Operations on Processes, Suspend and Resume,Interrupt Processing. Mutual Exclusion, the Producer / Consumer problem, the critical section problem, Semaphores, Classical problems in concurrency, inter process communication.Asynchronous Concurrent Process: introduction, parallel Processing, A Control Structure for indicating parallelism. CPU scheduling: concepts, performance criteria, and scheduling Algorithms. Algorithm evaluation, Multiprocessor scheduling.
UNIT- III DEAD LOCKS: System model, Deadlock characterization. Prevention, Avoidance and Detection, Recovery from deadlock, combined approach.
UNIT-IV MEMORY MANAGEMENT: Base machine, resident Monitor, multiprogramming with fixed partition, Multiprogramming with variable partitions, Paging, Segmentation, paged - segmentation, virtual Memory concepts, Demand paging, performance, page Replacement algorithms, Allocation of frames, Thrashing, cache memory organization impact on performance.
UNIT-V I/O MANAGEMENT &DISK SCHEDULING: I/O device and the organization of the I/O function, I/O Buffering, Disk I/O, Operating system Design issues. File system: File Concepts – File organization and Access mechanism, File Directories, File sharing, Implementation issues. Case studies: UNIX system, a virtual machine OS.
Text Books: 1. Operating System concepts by Silberscatz A and Peterson, J.L, PE- LPE. 2. Operating System Design & Implementation by Tanenbaum, A.S., PHI. 3. Operating system concepts Galvin by Silberscatz, John Weiley& Sons 4. Operating systems by H.M.Deital, Pearson Education
Reference Books : 1. Operating System in Depth Design and Programming by Thomas Doeppner, Wiley India 2. Operating System Concept & Design, Milenkovic M, McGraw Hill. 3. Operation System, Stalling William, Maxwell MCMillan International Editions
Course Outcomes: After completion of this course the students will be able to 1. To learn what is operating system and how it makes computers work 2. To know how operating system manages complexity through appropriate abstraction of CPU, memory, files, semaphores etc. 3. To get knowledge about different components of operating system like Process Management, Concurrency mechanisms, Deadlock handling, Memory Management techniques, Virtual Memory, File System and Secondary Storage Management, Security & protection etc.
Chhattisgarh Swami Vivekanand Technical University, Bhilai
Name of program: Bachelor of Engineering                                 Branch: Computer Science & Engineering Semester: IV Subject: Data Structures Lab Code: 322461(22) Total Lab Periods:                     36   Batch Size: 30 Maximum Marks: 40 Minimum Marks: 20
List of Experiments: (At leastTen experiments are to be performed by each student) 1. Write a program to perform following operations in one dimensional array, Insertion, Deletion and Searching (Linear & Binary). 2. Write a program to implement stack and perform push and pop operations. 3. Write a program to convert infix to postfix expressions using stack. 4. Write a program to perform following operations on a linear queue - addition, deletion, traversing. 5. Write a program to perform following operations on a circular queue - addition, deletion, traversing. 6. Write a program to perform following operations on a double ended queue - addition, deletion, traversing. 7. Write a program to perform following operations on a single link list-creation, inversion, deletion. 8. Write a program to perform following operations on a double link list – creation, insertion, deletion. 9. Write a program to implement polynomial in link list and perform. a) Polynomial arithmetic b) Evaluation of polynomial 10. Write a program to implement a linked stack and linked queue. 11. Write programs to perform Insertion, selection and bubble sort. 12. Write a program to perform quick sort. 13. Write a program to perform merge sort. 14. Write a program to perform heap sort. 15. Write a program to create a Binary search tree and perform –insertion, deletion & traversal. 16. Write a program to traversal of graph (B.F.S, D.F.S)
Recommended Books: 1. “Data structure using C” by Samir kumarBandyopadhyay, KashiNathDey 2. “C and Data structures” by Ashok K Kamthane Pearson Education. 3. “An Introduction to Data Structures with Application” by Tremblay & Sorenson ( TMH) 4. “Fundamentals of Data Structure” by Horowitz &Sahni (Golgotia) 5.  “Data Structures using C/C++” by Rajesh Shukla, Wiley India 6. “Data Structures using C” by ISRD Group (TMH) 7. “Data Structures using C/C++” by Langsam, Augenstein&Tananbaum (PHI) 8. “Data Structures & Program Design” by Robert L Kruse (PHI)
Chhattisgarh Swami Vivekanand Technical University, Bhilai
Name of program: Bachelor of Engineering                                 Branch: Computer Science & Engineering Semester: IV Subject: Computer H/W Maintenance Lab Code: 322462(22) Total Lab Periods:                     36   Batch Size: 30 Maximum Marks: 40 Minimum Marks: 20
List of Experiments: (At leastTen experiments are to be performed by each student) 1) Assembling of a Personal Computer: a. Identifying parts of mother board, power connections and locating other connectors. b. Interconnection of disk drive units, keyboard, mouse and monitor. 2) Hard disk partitioning and OS installation: a. Partitioning the hard disk using FDISK/ Partition Magic/ Disk Manager b. Installation of Windows XP/2000/Pro c. Installation of Linux kernel (possibly with dual boot option). 3) Circuit Tracing: Using Multimeter and continuity test mode, to trace a given circuit board and draw the schematic. 4) Load testing of SMPS: Testing the given SMPS of a PC using a multimeter Task 1 :Identify the peripherals of a computer, components in a CPU and its functions. Draw the block diagram of the CPU along with the configuration of each peripheral and submit to your instructor. Task 2: Every student should disassemble and assemble the PC back to working condition. Lab instructors should verify the work and follow it up with a Viva. Also students need to go through the video which shows the process of assembling a PC. A video would be given as part of the course content. Task 3: Every student should individually install Windows/Ubuntu/Fedora in dual boot and virtual OS on the personal computer. Lab instructor should verify the installation and follow it up with a Viva. Task 4: Every student should install Linux on the computer. This computer should have windows installed. The system should be configured as dual boot with both windows and Linux. Lab instructors should verify the installation and follow it up with a Viva Task 5: Several mini tasks would be that covers Basic commands in Linux and Basic system administration in Linux which includes: Basic Linux commands in bash, Create hard and symbolic links, Text processing, Using wildcards Task 6: Hardware Troubleshooting: Students have to be given a PC which does not boot due to improper assembly or defective peripherals. They should identify the problem and fix it to get the computer back to working condition. The work done should be verified by the instructor and followed up with a Viva Task 7: Software Troubleshooting: Students have to be given a malfunctioning CPU due to System software problems. They should identify the problem and fix it to get the computer back to working condition. The work done should be verified by the instructor and followed up with a Viva. Task 8: The test consists of various systems with Hardware / Software related troubles,Formatted disks without operating systems. Internet & World Wide Web Task 9: Orientation& Connectivity Boot Camp: Students should get connected to their Local Area Network and access the Internet. In the process they configure the TCP/IP setting. Finally Students should demonstrate, to the instructor, how to access the websites and email. If there is no Internet connectivity preparations need to be made by the instructors to simulate the WWW on the LAN. Task 10: Web Browsers, Surfing the Web: Students customize their web browsers with the LAN proxy settings, bookmarks, search toolbars and pop up blockers. Also, plug-ins like Macromedia Flash and JRE for applets should be configured. Task 11: Search Engines & Netiquette: Students should know what search engines are and how to use the search engines. A few topics would be given to the students for which they need to search on Google. This should be demonstrated to the instructors.
List of Equipment / Machine Required: 1. Computer Hardware trainer 2. Old computing system – should be used for training 3. Prepare museum of antique computer components for display in laboratory
Recommended Books: 1. Computer Repair with Diagnostic Flowcharts Third Edition: Troubleshooting PC Hardware Problems from Boot Failure to Poor Performance - Morris Rosenthal 2. A+ Guide to Hardware:  Managing, Maintaining, and Troubleshooting: by Jean Andrews
Chhattisgarh Swami Vivekanand Technical University, Bhilai
Name of program: Bachelor of Engineering                                 Branch: Computer Science & Engineering Semester: IV Subject: Object Oriented Concepts &   Programming using C++ Lab Code: 322463(22) Total Lab Periods:                     36   Batch Size: 30 Maximum Marks: 40 Minimum Marks: 20 List of Experiments: (At leastTen experiments are to be performed by each student) 1. Write a Program to check whether number is prime or not. 2. Write a Program to read number and to display the largest value between: (a) Two number,  (b)Three Numbers,  (c) Four numbers by using switch-case statements. 3. Write a Program to find sum of first natural numbers: sum= 1+2+3+4+……. 100 by using(a) for loop,  (b)while loop, (c) dowhile loop 4. Write a Program to find sum of the following series using function declaration:  Sum= x-(x)3/3!+(x)5/5!-………..(x)n/n! 5. Write a Program to read the element of the given two matrixes & to perform the matrix multiplication. 6. Write a Program to exchange the contents of two variables by using (a)Call by value, (b)Call by reference. 7. Write a Program to perform the following arithmetic operations of a complex number using astructure: (a) Addition of two complex numbers, (b) Subtraction of two complex numbers, (c) Multiplication of two complex numbers, (d) Division of two complex numbers. 8. Write an object oriented program (OOP) using C++ to exchange the private data members of two different functions using friend functions. 9. Write an OOP using C++ to count how many times a particular member function of a class is called by: (a) A particular object, (b) Any objects 10.Write an OOP using C++ to define a constructor for a “Date” class that initializes the Date objects with initial values. In case initial values are not provided, it should initialize the objects with default values. 11.Write an OOP using C++ to overload = = operator to compare two strings. 12.Write an OOP using C++ to perform simple arithmetic operations of two complex numbers using operator overloading. 13.Write a C++ program to demonstrate how ambiguity is avoided using scope resolution operator in thefollowing inheritance:    (a) Single inheritance,        (b) Multiple inheritance 14.Write a C++ Program to perform the swapping of two data items of integer, floating point number and character type with the help of function overloading. 15.Write a C++ program to generate a Fibonacci series by overloading: (a) Prefix Operator, (b) Postfix Operator. 16.Write a C++ program to access the private data of a class by non-member function through friend function where the friend function is declared: (a) in the location of public category, (b) in the location of private category, (c) within the scope of a class definition itself,  (d) defined with inline code subtraction. 17.Write a C++ program to demonstrate how a pure virtual function is defined, declared and invoked from the object of derived class through the pointer of the base class. 18.Write a C++ program to open a file and count the number of characters, number of vowels and number of newline characters present in the file. 19.Write a program to copy the contents of one text file to another and display both the files using a text Menu. 20.Create a database of 10 students. The database should contain the Name, Marks of 5 subjects,  Aggregate Marks, Aggregate percentage and Division according to the following conditions: (a) Percentage above or equal to 60 – First division,                (b) Percentage between 50 and less than 60 – Second division, (c) Percentage between 40 and less than 50 – Third division, (d) Percentage below 40 – Improvement required Display the above database of every student in a tabulated form. Implement the above program using Structures, Text-Menu and File I/O operations. 21.Write an OOP using a class template to read any five parameterized data type such as float and integer, and print the average. 22.Write a C++ program to Bubble Sort using template function. 23.Write a C++ program to read two numbers and find the division of these two numbers using exception handling. 24.Write a C++ program to create a function which take a parameter, if the value of parameter is > 0 then throw integer type, if parameter is = 0, then throw character type, if parameter is < 0 then throws float type exception but for all design use only one catch block. 25.Write a C++ program for invoking, for that generate & handle exception.
List of Equipment/Machine Required Pentium IV machine, Turbo C++ compiler / gcc, windows / Linux environment
Recommended Books : 1. Programming with C++ : D Ravichandran 2. OOP’s with C++ : E. Balaguruswamy . 3. Programming with C++ :Venugopal . 4. Object Oriented Programming in C++ :StroutStrups. 5. OOP with C++ : Robert Lafore 6. Let us C++ :YaswantKanetkar.
Chhattisgarh Swami Vivekanand Technical University, Bhilai
Name of program: Bachelor of Engineering                                 Branch: Computer Science & Engineering Semester: IV Subject: GUI Programming (VB/Gambus/other tools) Code: 322464(22) Total Lab Periods:                     36   Batch Size: 30 Maximum Marks: 40 Minimum Marks: 20
List of Experiments: (At leastTen experiments are to be performed by each student) 1. Gambas/.NET /Other- an Integrated Development Environment (IDE): An introduction, Explain New project window, Property window, Project Explorer window, Watch window etc. Design and identity card containing information regarding students such as Name, Roll No., Address, Class studying, Date of Birth, Blood Group, Phone No., etc. Add a Exit Button. 2. Develop an application to calculate Interest. It should accept rate of interest, period for calculation of interest (years), amount on which interest is to be calculated (Rs.). After clicking Compute Investment amount (Principal + Interest) should be displayed in separate text box. Add Exit button, Proper text box controls and labels to be used. Provide 2 optionsSimple, Compound interest. Provide Picture and Radio Button control. 3. Design a Simple Calculator to implement addition, subtraction, multiplication, division, remainder operations of two digits (include validation of input & proper message). 4. Create a form using check box & option box to give effect for fonts such as bold, italic, underline, strike through respectively for the text entered in the Rich Text Box (add status bar control). 5. Create a form to access drive list, directory list, and files within a directory of the computer you are using (use Tree structure, menus & toolbars). 6. Design a form for demonstration of print method (Error code, Error message display). Use print control box. Log the status of each message in a log file. 7. Demonstrate use of Date Environment, add tables and queries, place fields on form, report etc. Generate single table report & two table grouped report outputs. 8. Design a program to display regional languages of different states in India. Take many names of status of India in one list box control and other text box control should display their languages e. g. Maharashtra _ Marathi etc. 9. CASE STUDY (Design and develop one of the following three case studies): a. Create a Scientific Calculator (add minimum 15 functions). b. Develop a program for Online Examination system, which includes database and recordkeeping facility. c. Develop a program for Payroll System, which can handle database as well as can print the pay slips of employees. In this system provide a Login Window, which will accept the User Name and Password. After verifying the user information, the user should get the access to Payroll System. 10. Create a Simple Notepad application, which contains Menus, Rich Text Box, Common Dialog box, formatted text using Toolbar, and Replace text, Windows (Tile / Cascade), Status bar and scroll bar. 11. Modify the practical No. 7 to add following buttons: FIND, ADD, DELETE, UPDATE, and CANCEL. Give proper code to perform the activity described by these buttons. 12. Display the Table Data using Data Control/ADODC. Add Find, Delete, Update, Cancel Buttons on the form. 13. Display the data from two different tables having common keys using Visual data manager. Use Flex Gride control to display data. 14. Use Active –X control in the form which is created in previous practical.
List of Equipments / Machine Required:  Dual Core of Core –I3 Computing System.  Gambas/Visual Studio  Database (PostgreSQL/ MySQL/others …)
Recommended Books: 1. A Beginners Guide to Gambas – John W Rittinghouse
Chhattisgarh Swami Vivekanand Technical University, Bhilai
Name of program: Bachelor of Engineering                                 Branch: Computer Science & Engineering
Semester: IV
Subject: Health, Hygiene & Yoga Code: 322465(46) No. Of  Periods:                     2 Periods/Week   Total Tutorial Periods: NIL Maximum Marks: 40 Minimum Marks: 24 Course Objectives: 1 To provide understanding the importance of health. 2 To provide insight into the hygiene aspect & quality of life. 3 To study the concepts of various medical therapy. 4 To practice the various yogasans. 5 To provide knowledge about common diseases and its cure through yagasans and pranayam. 6 To develop concentration through various methods.
UNIT- I HEALTH & HYGIENE: Concept of health, Physical health and mentall health and wellbeing and how to achieve these, longevity and how to achieve it, concept and common rules of hygiene, cleanliness and its relation with hygiene; Overeating and underrating, amount of food intake required, intermittent fasting; adequate physical labour, sleep; consumption of junk fast food vs nutritious food; fruits, vegetables cereals and qualities of each of these.
UNIT-II INTRODUCTORY KNOWLEDGE OF COMMON STREAMS OF MEDICINAL CURE: History, development, basic concepts, modes of operation of Alopathy, Ayurved, Homoeopathy, Biochemic, Unani, Siddha, Accurpressure, Accupunture, Naturopathy, Yogic and Herbal system of medicines, Introduction of Anatomy and Physiology concerned.
UNIT- III YOGASANS: Meaning and concept of Yoga, Yogasans and its mode of operation, How to perform Yogasans, Common Yogasans with their benefits, such as, Padahastasan, Sarvangasan, Dhanurasan, Chakrasan, Bhujangasan, Paschimottasan, Gomukhasan, Mayurasan, Matsyasan, Matsyendrasan, Pawanmuktasan, Vajrasan, Shalabhasan, Sinhasan, Shashankasan, Surya Namaskar, Halasan, Janushirasan, Utshep Mudra.
UNIT-IV YOGASANS FOR COMMON DISEASES: From Yogic MateriaMedica with symptoms, causes, asans and herbal treatment.  Modern silent killers: High blood pressure, diabetes and cancer, causes and cure; Common health problems due to stomache disorders, such as, indigestion, acidity, dycentry, piles and fissures, artheritis, its causes, prevention and cure.  Asans for relaxation:Shavasan, Makarasan, Matsyakridasan, Shashankasan.  Asans to increase memory and blood supply to brain:Shirshpadasan, Shashankasan.  Asans for eye sight:Tratak, NetiKriya .  Pranayam: Definition and types: NadiShodhan, Bhastrik, Shitakari, Bhramari useful for students.
Text Books:
Health, Hygiene & Yoga,Dr P B Deshmukh, Gyan Book Pvt Ltd. New Delhi.
Reference Books: (1) Yogic MateriaMedica (2) Asan, Pranayam and Bandh
